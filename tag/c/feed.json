{
    "version": "https://jsonfeed.org/version/1",
    "title": "wuhen's blog • All posts by \"c\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2021/05/08/linux%20gdb%20%E8%B0%83%E8%AF%95c%E4%BB%A3%E7%A0%81%E5%B0%8F%E4%BE%8B%E4%B8%80%E5%88%99/",
            "url": "http://example.com/2021/05/08/linux%20gdb%20%E8%B0%83%E8%AF%95c%E4%BB%A3%E7%A0%81%E5%B0%8F%E4%BE%8B%E4%B8%80%E5%88%99/",
            "title": "linux gdb 调试c代码小例一则",
            "date_published": "2021-05-07T19:50:11.588Z",
            "content_html": "<h2 id=\"linux-gdb-调试c代码小例一则\"><a class=\"markdownIt-Anchor\" href=\"#linux-gdb-调试c代码小例一则\">#</a> linux gdb 调试 c 代码小例一则</h2>\n<p><strong>1. 实验环境</strong></p>\n<blockquote>\n<p>1.ubuntu20</p>\n<p>2.gdb-9.2</p>\n<p>3.gcc-9.3.0</p>\n</blockquote>\n<span id=\"more\"></span>\n<p><strong>2. 代码</strong><br>\n main.c</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;*************************************************************************</span><br><span class=\"line\">    &gt; File Name: main.c</span><br><span class=\"line\">    &gt; Author: wuhen</span><br><span class=\"line\">    &gt; Created Time: Thu 29 Oct 2020 04:52:54 PM CST</span><br><span class=\"line\"> ************************************************************************&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint a &#x3D; 1;</span><br><span class=\"line\">\tint b &#x3D; 2;</span><br><span class=\"line\">\tint c;</span><br><span class=\"line\">\tint d;</span><br><span class=\"line\">\tc &#x3D; a + b;</span><br><span class=\"line\">\td &#x3D; a + b + c;</span><br><span class=\"line\">\tprintf(&quot;a:%d\\nb:%d\\n&quot;,c,d);</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>3. 调试</strong></p>\n<p>执行命令，编译</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc -o main.out -g main.c</span><br></pre></td></tr></table></figure>\n<p>执行命令，开始调试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gdb main.out</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://user-images.githubusercontent.com/48900845/112751626-8ffcab80-9001-11eb-9851-898404a6c41c.png\" alt=\"image\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">start #开始调试</span><br><span class=\"line\">n #运行下一行</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>关于命令详解大家看<a href=\"https://man.linuxde.net/gdb\">这个</a>就好</strong></p>\n<p><strong>相关文章</strong></p>\n<p><a href=\"https://blog.csdn.net/qq_43938052/article/details/109489950\">python 初试 opencv</a><br>\n<a href=\"https://blog.csdn.net/qq_43938052/article/details/109490302\">python 操作摄像头</a></p>\n<blockquote>\n<p>作者 info</p>\n<p>作者：DebugWuhen</p>\n<p>原创公众号：『DebugWuhen』，专注于记录有趣的编程技术和有益的程序人生，期待你的关注。</p>\n<p>转载说明：务必注明来源（注明：来源于公众号：DebugWuhen， 作者：DebugWuhen）</p>\n<p><img src=\"https://user-images.githubusercontent.com/48900845/112752163-3b0e6480-9004-11eb-899d-66ddef749c2b.png\" alt=\"image\"></p>\n</blockquote>\n",
            "tags": [
                "C"
            ]
        },
        {
            "id": "http://example.com/2021/05/08/ubuntu%E4%B8%8B%E5%88%9D%E8%AF%95%E9%9D%99%E6%80%81%E5%BA%93.a%20%E4%B8%8E%E5%85%B1%E4%BA%AB%E5%BA%93.so/",
            "url": "http://example.com/2021/05/08/ubuntu%E4%B8%8B%E5%88%9D%E8%AF%95%E9%9D%99%E6%80%81%E5%BA%93.a%20%E4%B8%8E%E5%85%B1%E4%BA%AB%E5%BA%93.so/",
            "title": "ubuntu下初试静态库.a 与共享库.so",
            "date_published": "2021-05-07T19:50:11.588Z",
            "content_html": "<h2 id=\"ubuntu下初试静态库a-与共享库so\"><a class=\"markdownIt-Anchor\" href=\"#ubuntu下初试静态库a-与共享库so\">#</a> ubuntu 下初试静态库.a <a href=\"http://xn--jhquo34ejyu.so\">与共享库.so</a></h2>\n<p><strong>实验目的：</strong> 欲将 a1.c，a2.c 生成静态库.a 与共享库.so 以供 test.c 使用。</p>\n<p><strong>阅读技术基础：</strong> 需有 gcc、makefile 的一些基础，以及熟悉 linux 基础操作。</p>\n<hr>\n<p><strong>1. 实验环境</strong></p>\n<blockquote>\n<p>1.ubuntu16.04(<a href=\"https://blog.csdn.net/qq_43938052/article/details/107326122\">安装教程</a>)</p>\n<p>2.gcc-5.4.0（<strong>安装：apt install gcc</strong> ）</p>\n<p>3.make-4.1（<strong>安装：apt install make</strong> ）</p>\n</blockquote>\n<span id=\"more\"></span>\n<p><strong>2. 测试源码</strong></p>\n<hr>\n<p>a1.c</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;*************************************************************************</span><br><span class=\"line\">    &gt; File Name: a1.c</span><br><span class=\"line\">    &gt; Author: wuhen</span><br><span class=\"line\">    &gt; Created Time: Tue 13 Oct 2020 12:41:27 AM CST</span><br><span class=\"line\"> ************************************************************************&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">void print1(int arg)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        printf(&quot;A1 print arg:%d\\n&quot;,arg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>a2.c</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;*************************************************************************</span><br><span class=\"line\">    &gt; File Name: a2.c</span><br><span class=\"line\">    &gt; Author: wuhen</span><br><span class=\"line\">    &gt; Created Time: Tue 13 Oct 2020 12:43:22 AM CST</span><br><span class=\"line\"> ************************************************************************&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">void print2(char *arg)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        printf(&quot;A2 print arg:%s\\n&quot;,arg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>a.h</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;*************************************************************************</span><br><span class=\"line\">    &gt; File Name: a.h</span><br><span class=\"line\">    &gt; Author: wuhen</span><br><span class=\"line\">    &gt; Created Time: Tue 13 Oct 2020 12:55:06 AM CST</span><br><span class=\"line\"> ************************************************************************&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">#ifndef A_H</span><br><span class=\"line\">#define A_H</span><br><span class=\"line\">void print1(int);</span><br><span class=\"line\">void print2(char*);</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>test.c</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;*************************************************************************</span><br><span class=\"line\">    &gt; File Name: test.c</span><br><span class=\"line\">    &gt; Author: wuhen</span><br><span class=\"line\">    &gt; Created Time: Tue 13 Oct 2020 02:11:53 AM CST</span><br><span class=\"line\"> ************************************************************************&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">#include&quot;a.h&quot;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        print1(4);</span><br><span class=\"line\">        print2(&quot;hello,world!!!&quot;);</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>makefile</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all:a1.o a2.o test.o</span><br><span class=\"line\">        gcc -o all a1.o a2.o test.o</span><br><span class=\"line\">a1.o:a1.c</span><br><span class=\"line\">        gcc -c a1.c</span><br><span class=\"line\">a2.o:a2.c</span><br><span class=\"line\">        gcc -c a2.c</span><br><span class=\"line\">test.o:test.c a.h</span><br><span class=\"line\">        gcc -c a.h test.c</span><br><span class=\"line\">static:</span><br><span class=\"line\">        ar crv lib.a a1.o a2.o</span><br><span class=\"line\">        gcc -o test1 test.c lib.a</span><br><span class=\"line\"></span><br><span class=\"line\">createso:</span><br><span class=\"line\">        gcc -c -fpic *.c a.h</span><br><span class=\"line\">        gcc -shared a1.o a2.o -o lib.so</span><br><span class=\"line\">        gcc -o test2 test.c lib.so</span><br><span class=\"line\">        sudo cp lib.so &#x2F;usr&#x2F;lib&#x2F;</span><br><span class=\"line\">clean:</span><br><span class=\"line\">        rm a1.o a2.o test.o</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>3. 验证</strong><br>\n执行命令，测试源码是否可以正常编译。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make</span><br><span class=\"line\">.&#x2F;all</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://user-images.githubusercontent.com/48900845/112751801-6c863080-9002-11eb-86c4-1dbbe6056334.png\" alt=\"image\"></p>\n<p>执行命令，生成静态库 lib.a，使用 test.c 测试静态库是否可以正常使用。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make static</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://user-images.githubusercontent.com/48900845/112751808-7871f280-9002-11eb-9aff-752367723177.png\" alt=\"image\"></p>\n<p>执行命令，<a href=\"http://xn--lib-8l9dv0kn0zssfgx6b.so\">生成共享库 lib.so</a>，并使用 test.c 进行测试。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make createso</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://user-images.githubusercontent.com/48900845/112751820-86277800-9002-11eb-9b7c-b11fc22d3840.png\" alt=\"image\"></p>\n<p><strong>4. 附录</strong><br>\n gcc 帮助信息</p>\n<p><img src=\"https://user-images.githubusercontent.com/48900845/112751833-90e20d00-9002-11eb-9ed8-5811651bf173.png\" alt=\"image\"><br>\n<img src=\"https://user-images.githubusercontent.com/48900845/112751837-95a6c100-9002-11eb-8a1b-fbca1768a9d3.png\" alt=\"image\"></p>\n<hr>\n<p>ar 帮助信息</p>\n<p><img src=\"https://user-images.githubusercontent.com/48900845/112751844-9fc8bf80-9002-11eb-83f6-b3fcd7b29387.png\" alt=\"image\"><br>\n<img src=\"https://user-images.githubusercontent.com/48900845/112751847-a3f4dd00-9002-11eb-82b5-b59e25ed537c.png\" alt=\"image\"></p>\n<blockquote>\n<p>作者 info</p>\n<p>作者：DebugWuhen</p>\n<p>原创公众号：『DebugWuhen』，专注于记录有趣的编程技术和有益的程序人生，期待你的关注。</p>\n<p>转载说明：务必注明来源（注明：来源于公众号：DebugWuhen， 作者：DebugWuhen）</p>\n<p><img src=\"https://user-images.githubusercontent.com/48900845/112752163-3b0e6480-9004-11eb-899d-66ddef749c2b.png\" alt=\"image\"></p>\n</blockquote>\n",
            "tags": [
                "C"
            ]
        },
        {
            "id": "http://example.com/2021/05/08/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E9%87%8C%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E3%80%81%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E3%80%81%E5%A0%86%E3%80%81%E6%A0%88/",
            "url": "http://example.com/2021/05/08/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E9%87%8C%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E3%80%81%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E3%80%81%E5%A0%86%E3%80%81%E6%A0%88/",
            "title": "C语言程序里全局变量、局部变量、堆、栈",
            "date_published": "2021-05-07T19:50:11.578Z",
            "content_html": "<h2 id=\"c语言程序里全局变量-局部变量-堆-栈\"><a class=\"markdownIt-Anchor\" href=\"#c语言程序里全局变量-局部变量-堆-栈\">#</a> C 语言程序里全局变量、局部变量、堆、栈</h2>\n<p><strong>1. 实验环境</strong></p>\n<blockquote>\n<p>1.ubuntu20</p>\n</blockquote>\n<p><strong>全局变量、静态局部变量保存在全局数据区，初始化的和未初始化的分别保存在一起。普通局部变量保存在堆栈中。<br>\n在 C\\C++ 中，通常可以把内存理解为 4 个分区：栈、堆、全局 / 静态存储区和常量存储区</strong></p>\n<blockquote>\n<p>1. 内存栈区 stack： 存放局部变量名；</p>\n<p>2. 内存堆区 heap： 存放 new 或者 malloc 出来的对象；</p>\n<p>3.Text &amp; Data &amp; Bss：代码段与静态分配</p>\n<p>4.BSS 区（未初始化数据段）：并不给该段的数据分配空间，仅仅是记录了数据所需空间的大小。</p>\n<p>5.DATA（初始化的数据段）：为数据分配空间，数据保存在目标文件中。</p>\n</blockquote>\n<span id=\"more\"></span>\n<p><strong>2. 源码</strong></p>\n<p>haha.c</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">#include &lt;stdlib.h&gt;</span><br><span class=\"line\">void before()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">char g_buf[16];</span><br><span class=\"line\">char g_buf2[16];</span><br><span class=\"line\">char g_buf3[16];</span><br><span class=\"line\">char g_buf4[16];</span><br><span class=\"line\">char g_i_buf[]&#x3D;&quot;123&quot;;</span><br><span class=\"line\">char g_i_buf2[]&#x3D;&quot;123&quot;;</span><br><span class=\"line\">char g_i_buf3[]&#x3D;&quot;123&quot;;</span><br><span class=\"line\">void after()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main(int argc, char **argv)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        char l_buf[16];</span><br><span class=\"line\">        char l_buf2[16];</span><br><span class=\"line\">        char l_buf3[16];</span><br><span class=\"line\">        static char s_buf[16];</span><br><span class=\"line\">        static char s_buf2[16];</span><br><span class=\"line\">        static char s_buf3[16];</span><br><span class=\"line\">        char *p_buf;</span><br><span class=\"line\">        char *p_buf2;</span><br><span class=\"line\">        char *p_buf3;</span><br><span class=\"line\">        </span><br><span class=\"line\">        p_buf &#x3D; (char *)malloc(sizeof(char) * 16);</span><br><span class=\"line\">        p_buf2 &#x3D; (char *)malloc(sizeof(char) * 16);</span><br><span class=\"line\">        p_buf3 &#x3D; (char *)malloc(sizeof(char) * 16);</span><br><span class=\"line\"> </span><br><span class=\"line\">        printf(&quot;g_buf: 0x%x\\n&quot;, g_buf);</span><br><span class=\"line\">        printf(&quot;g_buf2: 0x%x\\n&quot;, g_buf2);</span><br><span class=\"line\">        printf(&quot;g_buf3: 0x%x\\n&quot;, g_buf3);</span><br><span class=\"line\">        printf(&quot;g_buf4: 0x%x\\n&quot;, g_buf4);</span><br><span class=\"line\"> </span><br><span class=\"line\">        printf(&quot;g_i_buf: 0x%x\\n&quot;, g_i_buf);</span><br><span class=\"line\">        printf(&quot;g_i_buf2: 0x%x\\n&quot;, g_i_buf2);</span><br><span class=\"line\">        printf(&quot;g_i_buf3: 0x%x\\n&quot;, g_i_buf3);</span><br><span class=\"line\"> </span><br><span class=\"line\">        printf(&quot;l_buf: 0x%x\\n&quot;, l_buf);</span><br><span class=\"line\">        printf(&quot;l_buf2: 0x%x\\n&quot;, l_buf2);</span><br><span class=\"line\">        printf(&quot;l_buf3: 0x%x\\n&quot;, l_buf3);</span><br><span class=\"line\"> </span><br><span class=\"line\">        printf(&quot;s_buf: 0x%x\\n&quot;, s_buf);</span><br><span class=\"line\">        printf(&quot;s_buf2: 0x%x\\n&quot;, s_buf2);</span><br><span class=\"line\">        printf(&quot;s_buf3: 0x%x\\n&quot;, s_buf3);</span><br><span class=\"line\"> </span><br><span class=\"line\">        printf(&quot;p_buf: 0x%x\\n&quot;, p_buf);</span><br><span class=\"line\">        printf(&quot;p_buf2: 0x%x\\n&quot;, p_buf2);</span><br><span class=\"line\">        printf(&quot;p_buf3: 0x%x\\n&quot;, p_buf3);</span><br><span class=\"line\"> </span><br><span class=\"line\">        printf(&quot;before: 0x%x\\n&quot;, before);</span><br><span class=\"line\">        printf(&quot;after: 0x%x\\n&quot;, after);</span><br><span class=\"line\">        printf(&quot;main: 0x%x\\n&quot;, main);</span><br><span class=\"line\"> </span><br><span class=\"line\">        if (argc &gt; 1)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">                strcpy(l_buf, argv[1]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>3. 效果</strong></p>\n<p><img src=\"https://user-images.githubusercontent.com/48900845/112803918-6184dc00-90a6-11eb-913e-1ae3d29d7102.png\" alt=\"image\"></p>\n<blockquote>\n<p>作者 info</p>\n<p>作者：DebugWuhen</p>\n<p>原创公众号：『DebugWuhen』，专注于记录有趣的编程技术和有益的程序人生，期待你的关注。</p>\n<p>转载说明：务必注明来源（注明：来源于公众号：DebugWuhen， 作者：DebugWuhen）</p>\n<p><img src=\"https://user-images.githubusercontent.com/48900845/112752163-3b0e6480-9004-11eb-899d-66ddef749c2b.png\" alt=\"image\"></p>\n</blockquote>\n",
            "tags": [
                "C"
            ]
        },
        {
            "id": "http://example.com/2021/05/08/linux%E5%88%9D%E8%AF%95gcc%20makefile%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B/",
            "url": "http://example.com/2021/05/08/linux%E5%88%9D%E8%AF%95gcc%20makefile%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B/",
            "title": "linux初试gcc makefile菜鸟教程",
            "date_published": "2021-05-07T19:50:11.578Z",
            "content_html": "<h2 id=\"linux初试gcc-makefile菜鸟教程\"><a class=\"markdownIt-Anchor\" href=\"#linux初试gcc-makefile菜鸟教程\">#</a> linux 初试 gcc makefile 菜鸟教程</h2>\n<hr>\n<p><strong>1. 实验环境</strong></p>\n<blockquote>\n<p>1.ubuntu16(<a href=\"https://blog.csdn.net/qq_43938052/article/details/107326122\">安装教程</a>)</p>\n<p>2.gcc<br>\n (gcc 安装：apt install gcc)</p>\n<p>3.make<br>\n (make 安装 apt install make)</p>\n</blockquote>\n<p>用 C 举个小例子</p>\n<span id=\"more\"></span>\n<p><strong>2. 源码</strong></p>\n<p>main.c</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;*************************************************************************</span><br><span class=\"line\">    &gt; File Name: main.c</span><br><span class=\"line\">    &gt; Author: wuhen</span><br><span class=\"line\">    &gt; Mail: wuhen1090@qq.com</span><br><span class=\"line\">    &gt; Created Time: Fri 25 Sep 2020 09:52:19 PM CST</span><br><span class=\"line\"> ************************************************************************&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">int sub(int a,int b);</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        int a;</span><br><span class=\"line\">        int b;</span><br><span class=\"line\">        float c;</span><br><span class=\"line\">        printf(&quot;请敲个数 a&#x3D;&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;a);</span><br><span class=\"line\">        printf(&quot;请敲个数 b&#x3D;&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;b);</span><br><span class=\"line\">        c &#x3D; sub(a,b);</span><br><span class=\"line\">        printf(&quot;c&#x3D;%.1f\\n&quot;,c);</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>sub.c</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#x2F;*************************************************************************</span><br><span class=\"line\">    &gt; File Name: sub.c</span><br><span class=\"line\">    &gt; Author: wuhen</span><br><span class=\"line\">    &gt; Mail: wuhen1090@qq.com</span><br><span class=\"line\">    &gt; Created Time: Fri 25 Sep 2020 09:48:26 PM CST</span><br><span class=\"line\"> ************************************************************************&#x2F;</span><br><span class=\"line\">float sub(int a,int b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        return a + b;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>编译一下</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc -o out main.c sub.c</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://user-images.githubusercontent.com/48900845/112751751-24ffa480-9002-11eb-80a8-ae4262aeceaf.png\" alt=\"image\"></p>\n<p><strong>Nice，成功了</strong></p>\n<p><strong>3.makefile</strong><br>\n 当做一个大些的工程时，使用刚才的方式就有些恼火，so，我们可以用神器 ——make 来解决它。</p>\n<p>makefile</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all:main.o sub.o</span><br><span class=\"line\">        gcc -o all main.o sub.o</span><br><span class=\"line\">main.o:main.c</span><br><span class=\"line\">        gcc -c main.c</span><br><span class=\"line\">sub.o:sub.c</span><br><span class=\"line\">        gcc -c sub.c</span><br><span class=\"line\">clean:</span><br><span class=\"line\">        rm main.o sub.o</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://user-images.githubusercontent.com/48900845/112751762-2f21a300-9002-11eb-8160-4aa943226a6e.png\" alt=\"image\"></p>\n<p>OK，今天的文章就肝到这里。</p>\n<blockquote>\n<p>作者 info</p>\n<p>作者：DebugWuhen</p>\n<p>原创公众号：『DebugWuhen』，专注于记录有趣的编程技术和有益的程序人生，期待你的关注。</p>\n<p>转载说明：务必注明来源（注明：来源于公众号：DebugWuhen， 作者：DebugWuhen）</p>\n<p><img src=\"https://user-images.githubusercontent.com/48900845/112752163-3b0e6480-9004-11eb-899d-66ddef749c2b.png\" alt=\"image\"></p>\n</blockquote>\n",
            "tags": [
                "C"
            ]
        }
    ]
}